name: Test and deploy Thuso production

on:
  push:
    branches:
      - main

jobs:
  test-and-build:
    name: Test, build, deploy Thuso production apps.
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_DEFAULT_REGION: us-west-2
      NODE_ENV: staging

    steps:
      - name: Checkout code
        uses: actions/Checkout@v3

      - name: Setup Node v22.13.1 environment
        uses: actions/setup-node@v4
        with:
          node-version: '22.13.1'

      - name: Install dependencies
        run: npm install

      - name: Get environment variables from S3
        run: aws s3 cp s3://pfitz-configs/thuso/staging/.env .

      - name: Unit Testing
        run: npm run test -- --forceExit

      - name: E2E Testing
        run: |
          npm run test:e2e:thuso-whatsapp -- --forceExit
          npm run test:e2e:thuso-ai -- --forceExit
          npm run test:e2e:management -- --forceExit
        timeout-minutes: 10

      - name: Install Nest CLI
        run: npm install -g @nestjs/cli

      - name: Build Thuso Management app
        run: |
          nest build management
          docker build -f ./cicd/Dockerfile -t thuso-management:latest .
          docker tag thuso-management:latest registry.digitalocean.com/pfitz-cr/thuso-management:latest

      - name: Build Thuso Whatsapp app
        run: |
          nest build thuso-whatsapp
          docker build -f ./cicd/Dockerfile -t thuso-whatsapp:latest .
          docker tag thuso-whatsapp:latest registry.digitalocean.com/pfitz-cr/thuso-whatsapp:latest

      - name: Build Thuso AI app
        run: |
          nest build thuso-ai
          docker build -f ./cicd/Dockerfile -t thuso-ai:latest .
          docker tag thuso-ai:latest registry.digitalocean.com/pfitz-cr/thuso-ai:latest

      - name: Docker login DigitalOcean Container Registry
        run: echo "${{ secrets.DO_ACTIONS_API_TOKEN }}" | docker login -u pfidzetendai@gmail.com --password-stdin registry.digitalocean.com

      - name: Push images to  registry.digitalocean.com
        run: |
          docker push registry.digitalocean.com/pfitz-cr/thuso-management:latest
          docker push registry.digitalocean.com/pfitz-cr/thuso-whatsapp:latest
          docker push registry.digitalocean.com/pfitz-cr/thuso-ai:latest

      - name: Install doctl for DigitalOcean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACTIONS_API_TOKEN }}

      - name: Authenticate Kubectl for DOKS
        run: doctl kubernetes cluster kubeconfig save 48ff4ae6-13a8-44f7-8800-defdaff34688

      - name: Install production helm release "thuso-production"
        run: |
          cd helm
          aws s3 cp s3://pfitz-configs/thuso/prod/values-prod.yaml ./thuso
          helm upgrade thuso-production thuso -f thuso/values-prod.yaml
          kubectl rollout restart deployment -n thuso-production